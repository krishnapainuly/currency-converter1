{"version":3,"sources":["AttractionComponent.js","App.js","reportWebVitals.js","index.js"],"names":["AttractionComponent","state","amount","convertedAmount","amountCurrency","convertToCurrency","handleAmtChange","bind","handleClick","handleCurrChange","handleConvertCurrChange","type","className","placeholder","onChange","e","value","this","maxLength","onClick","disabled","setState","target","alert","fetch","BASE_URL","then","response","json","data","success","console","log","rates","Object","entries","map","key","error","code","catch","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSA0EeA,G,wDApEX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CAAEC,OAAQ,GAAIC,gBAAiB,GAAIC,eAAgB,GAAIC,kBAAmB,IACvF,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBACxB,EAAKG,wBAA0B,EAAKA,wBAAwBH,KAA7B,gBANrB,E,qDASJ,IAAD,OACL,OACI,qCACI,uBAAOI,KAAK,SAASC,UAAU,cAAcC,YAAY,SAASC,SAAU,SAAAC,GAAC,OAAI,EAAKT,gBAAgBS,IAAIC,MAAOC,KAAKhB,MAAMC,SADhI,OAEI,uBAAOU,UAAU,cAAcD,KAAK,OAAOE,YAAY,gBAAgBC,SAAU,SAAAC,GAAC,OAAI,EAAKN,iBAAiBM,IAAIG,UAAU,MAF9H,OAGI,wBAAQN,UAAU,YAAYO,QAAS,SAAAJ,GAAC,OAAI,EAAKP,eAAjD,wBAHJ,OAII,uBAAOG,KAAK,SAASC,UAAU,cAAcI,MAAOC,KAAKhB,MAAME,gBAAiBiB,UAAQ,IAJ5F,OAKI,uBAAOR,UAAU,cAAcD,KAAK,OAAOK,MAAOC,KAAKhB,MAAMI,kBAAmBS,SAAU,SAAAC,GAAC,OAAI,EAAKL,wBAAwBK,IAAIF,YAAY,kC,sCAKxIE,GACZE,KAAKI,SAAS,CAAEnB,OAAQa,EAAEO,OAAON,U,uCAGpBD,GACbE,KAAKI,SAAS,CAAEjB,eAAgBW,EAAEO,OAAON,U,8CAGrBD,GACpBE,KAAKI,SAAS,CAAEhB,kBAAmBU,EAAEO,OAAON,U,oCAI5C,IAAId,EAASe,KAAKhB,MAAMC,OACpBE,EAAiBa,KAAKhB,MAAMG,eAC5BC,EAAoBY,KAAKhB,MAAMI,kBACnC,IAAKH,GAAUA,GAAU,EACrBqB,MAAM,4CAEL,GAAKnB,EAEH,GAAKC,EAGP,CAEDmB,MADUC,oFAAsBrB,EAAiB,YAAcC,GACpDqB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAAQF,MAAK,SAAUG,GAAO,IAAD,OAC5DA,EAAKC,SACLC,QAAQC,IAAIH,EAAKI,OACjBhB,KAAKI,SAAS,CAAElB,gBAAiB,MACjC+B,OAAOC,QAAQN,EAAKI,OAAOG,KAAI,SAACC,EAAKrB,GAAN,OAAgB,EAAKK,SAAS,CAAElB,gBAAiBD,EAASmC,EAAI,SAEpE,MAApBR,EAAKS,MAAMC,KAChBR,QAAQC,IAAI,0BAEa,MAApBH,EAAKS,MAAMC,KAChBR,QAAQC,IAAI,0BAEa,MAApBH,EAAKS,MAAMC,MAChBR,QAAQC,IAAI,8BAGjBQ,OAAM,SAACF,GAAD,OAAWP,QAAQC,IAAIM,WApBhCf,MAAM,6CAFNA,MAAM,iC,GA3CgBkB,cCcnBC,MAff,WACE,OACE,mCACE,sBAAK9B,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qDAEF,uBACA,uBACA,cAAC,EAAD,CAAqBA,UAAU,sBCAxB+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a6f480df.chunk.js","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport './AttractionComponent.css';\r\n\r\nconst BASE_URL = 'http://data.fixer.io/api/latest?access_key=5348a729ebda2cff1b4e82f52d4d0376';\r\nclass AttractionComponent extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { amount: '', convertedAmount: '', amountCurrency: '', convertToCurrency: '' };\r\n        this.handleAmtChange = this.handleAmtChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleCurrChange = this.handleCurrChange.bind(this);\r\n        this.handleConvertCurrChange = this.handleConvertCurrChange.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <input type=\"number\" className=\"Input-field\" placeholder=\"Amount\" onChange={e => this.handleAmtChange(e)} value={this.state.amount} />&nbsp;\r\n                <input className=\"input-field\" type=\"text\" placeholder=\"Currency Code\" onChange={e => this.handleCurrChange(e)} maxLength=\"3\" />&nbsp;\r\n                <button className=\"searchBtn\" onClick={e => this.handleClick()}>Convert to</button>&nbsp;\r\n                <input type=\"number\" className=\"input-field\" value={this.state.convertedAmount} disabled />&nbsp;\r\n                <input className=\"input-field\" type=\"text\" value={this.state.convertToCurrency} onChange={e => this.handleConvertCurrChange(e)} placeholder=\"Convert to currency code\" />\r\n            </>\r\n        );\r\n    }\r\n\r\n    handleAmtChange(e) {\r\n        this.setState({ amount: e.target.value })\r\n    }\r\n\r\n    handleCurrChange(e) {\r\n        this.setState({ amountCurrency: e.target.value })\r\n    }\r\n\r\n    handleConvertCurrChange(e) {\r\n        this.setState({ convertToCurrency: e.target.value })\r\n    }\r\n\r\n    handleClick() {\r\n        var amount = this.state.amount;\r\n        var amountCurrency = this.state.amountCurrency;\r\n        var convertToCurrency = this.state.convertToCurrency;\r\n        if (!amount && amount <= 0) {\r\n            alert('Amount should be greater than zero.');\r\n        }\r\n        else if (!amountCurrency) {\r\n            alert('Currency cannot be empty.');\r\n        } else if (!convertToCurrency) {\r\n            alert('Convert to currency cannot be empty.');\r\n        }\r\n        else {\r\n            var url = BASE_URL + '&base=' + amountCurrency + '&symbols=' + convertToCurrency;\r\n            fetch(url).then((response) => response.json()).then(function (data) {\r\n                if (data.success) {\r\n                    console.log(data.rates);\r\n                    this.setState({ convertedAmount: 100 });\r\n                    Object.entries(data.rates).map((key, value) => this.setState({ convertedAmount: amount * key[1] }));\r\n                }\r\n                else if (data.error.code === 201) {\r\n                    console.log('invalid base currency.');\r\n                }\r\n                else if (data.error.code === 202) {\r\n                    console.log('invalid currency code.');\r\n                }\r\n                else if (data.error.code === 105) {\r\n                    console.log('currency not supported.');\r\n                }\r\n\r\n            }).catch((error) => console.log(error));\r\n        }\r\n    }\r\n}\r\n\r\nexport default AttractionComponent;","import './App.css';\nimport AttractionComponent from './AttractionComponent';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <b>Currency Converter</b>\n        </header>\n        <br></br>\n        <br></br>\n        <AttractionComponent className=\"float-child\" />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}