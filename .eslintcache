[{"C:\\Users\\samsad\\Desktop\\currency-converter\\src\\index.js":"1","C:\\Users\\samsad\\Desktop\\currency-converter\\src\\reportWebVitals.js":"2","C:\\Users\\samsad\\Desktop\\currency-converter\\src\\App.js":"3","C:\\Users\\samsad\\Desktop\\currency-converter\\src\\AttractionComponent.js":"4"},{"size":517,"mtime":1609231936967,"results":"5","hashOfConfig":"6"},{"size":375,"mtime":1609231936969,"results":"7","hashOfConfig":"6"},{"size":395,"mtime":1609231936962,"results":"8","hashOfConfig":"6"},{"size":3232,"mtime":1609231936965,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"14rofek",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\samsad\\Desktop\\currency-converter\\src\\index.js",[],["20","21"],"C:\\Users\\samsad\\Desktop\\currency-converter\\src\\reportWebVitals.js",[],"C:\\Users\\samsad\\Desktop\\currency-converter\\src\\App.js",[],"C:\\Users\\samsad\\Desktop\\currency-converter\\src\\AttractionComponent.js",["22"],"import React, { Component, useState } from \"react\";\r\nimport './AttractionComponent.css';\r\n\r\nconst BASE_URL = 'http://data.fixer.io/api/latest?access_key=5348a729ebda2cff1b4e82f52d4d0376';\r\nclass AttractionComponent extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { amount: '', convertedAmount: '', amountCurrency: '', convertToCurrency: '' };\r\n        this.handleAmtChange = this.handleAmtChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleCurrChange = this.handleCurrChange.bind(this);\r\n        this.handleConvertCurrChange = this.handleConvertCurrChange.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <input type=\"number\" className=\"Input-field\" placeholder=\"Amount\" onChange={e => this.handleAmtChange(e)} value={this.state.amount} />&nbsp;\r\n                <input className=\"input-field\" type=\"text\" placeholder=\"Currency Code\" onChange={e => this.handleCurrChange(e)} maxLength=\"3\" />&nbsp;\r\n                <button className=\"searchBtn\" onClick={e => this.handleClick()}>Convert to</button>&nbsp;\r\n                <input type=\"number\" className=\"input-field\" value={this.state.convertedAmount} disabled />&nbsp;\r\n                <input className=\"input-field\" type=\"text\" value={this.state.convertToCurrency} onChange={e => this.handleConvertCurrChange(e)} placeholder=\"Convert to currency code\" />\r\n            </>\r\n        );\r\n    }\r\n\r\n    handleAmtChange(e) {\r\n        this.setState({ amount: e.target.value })\r\n    }\r\n\r\n    handleCurrChange(e) {\r\n        this.setState({ amountCurrency: e.target.value })\r\n    }\r\n\r\n    handleConvertCurrChange(e) {\r\n        this.setState({ convertToCurrency: e.target.value })\r\n    }\r\n\r\n    handleClick() {\r\n        var amount = this.state.amount;\r\n        var amountCurrency = this.state.amountCurrency;\r\n        var convertToCurrency = this.state.convertToCurrency;\r\n        if (!amount && amount <= 0) {\r\n            alert('Amount should be greater than zero.');\r\n        }\r\n        else if (!amountCurrency) {\r\n            alert('Currency cannot be empty.');\r\n        } else if (!convertToCurrency) {\r\n            alert('Convert to currency cannot be empty.');\r\n        }\r\n        else {\r\n            var url = BASE_URL + '&base=' + amountCurrency + '&symbols=' + convertToCurrency;\r\n            fetch(url).then((response) => response.json()).then(function (data) {\r\n                if (data.success) {\r\n                    console.log(data.rates);\r\n                    this.setState({ convertedAmount: 100 });\r\n                    Object.entries(data.rates).map((key, value) => this.setState({ convertedAmount: amount * key[1] }));\r\n                }\r\n                else if (data.error.code === 201) {\r\n                    console.log('invalid base currency.');\r\n                }\r\n                else if (data.error.code === 202) {\r\n                    console.log('invalid currency code.');\r\n                }\r\n                else if (data.error.code === 105) {\r\n                    console.log('currency not supported.');\r\n                }\r\n\r\n            }).catch((error) => console.log(error));\r\n        }\r\n    }\r\n}\r\n\r\nexport default AttractionComponent;",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":28,"nodeType":"29","messageId":"30","endLine":1,"endColumn":36},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]